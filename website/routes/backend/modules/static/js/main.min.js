class Modal{constructor(options,callback=(()=>{})){this.settings={ajaxData:null,ajaxUrl:null,title:"Modal",buttons:null,content:null,customClass:null,outsideClose:!0,onClose:null,onOpen:null,width:150,height:100,autoOpen:!0,overlayer:!0,...options},this.callback=callback,this.#build(),this.popupEl=null,this.OutsideClick=this.#outsideClickListener.bind(this),this.settings.autoOpen&&this.open()}#build(){this.CtnDiv=createDOMElement({attributes:{class:"modal_ctn"}});const InnerCtnDiv=createDOMElement({attributes:{class:"modal_innerctn"}});""!=this.settings.title&&InnerCtnDiv.appendChild(createDOMElement({attributes:{class:"modal_headerctn"},text:this.settings.title}));const ContentDiv=createDOMElement({attributes:{class:"content_ctn"}}),BtnDiv=createDOMElement({attributes:{class:"btn_ctn"}});null!=this.settings.customClass&&this.CtnDiv.classList.add(this.settings.customClass),this.CtnDiv.appendChild(InnerCtnDiv),InnerCtnDiv.appendChild(ContentDiv),InnerCtnDiv.appendChild(BtnDiv)}#loadContent(fallback){if(this?.popupEl){var contentCtn=this.popupEl.getElementsByClassName("content_ctn");if(this.settings.content){switch(typeof this.settings.content){case"string":contentCtn[0].innerHTML=this.settings.content;break;case"object":contentCtn[0].appendChild(this.settings.content);break}this.#loadButtons(),"function"==typeof fallback&&fallback(),this.#appendToBody()}else if(this.settings.ajaxUrl){const request=this.settings.ajaxData?new Request(this.settings.ajaxUrl,{method:"POST",body:JSON.stringify(this.settings.ajaxData),headers:{"Content-Type":"application/json"}}):new Request(this.settings.ajaxUrl);fetch(request).then((async response=>{if(response.ok)return response.text();const data=await response.json(),error=new Error(`Response status: ${response.status}`);throw error.data=data,error})).then((response=>{contentCtn[0].innerHTML=response,this.#loadButtons(),"function"==typeof fallback&&fallback(),this.#appendToBody()})).catch((err=>{console.error(err.message),this.callback(err.data)}))}}}#loadButtons(){var btnCtn=this.popupEl.getElementsByClassName("btn_ctn");this.settings?.buttons&&"object"==typeof this.settings?.buttons&&this.settings.buttons.length>0&&this.settings.buttons.forEach((btn=>{var button=createDOMElement({type:"button",attributes:{class:"modal_ctn"},text:btn?.title});btn?.tooltip&&button.setAttribute("title",btn.tooltip),btn?.form&&button.setAttribute("form",btn.form),btn?.customClass&&button.classList.add(btn.customClass),btnCtn[0].appendChild(button),btn?.click&&button.addEventListener("click",(evt=>{btn.click(this,evt)}))}))}open(){this.settings.overlayer?(this.OverDiv=createDOMElement({attributes:{class:"modal_overlay",onclick:this.settings?.outsideClose&&this.settings.overlayer?this.OutsideClick:""}}),this.OverDiv.appendChild(this.CtnDiv),this.popupEl=this.OverDiv):(this.popupEl=this.CtnDiv,this.#EventListener()),this.#loadContent((()=>{"function"==typeof this.settings.onOpen&&this.settings.onOpen(this)}))}#appendToBody(){document.getElementsByTagName("body")[0].appendChild(this.popupEl)}disablebtn(){this.popupEl.getElementsByClassName("btn_ctn")[0].querySelectorAll("button").forEach((btn=>{btn.setAttribute("disabled",!0)}))}enablebtn(){this.popupEl.getElementsByClassName("btn_ctn")[0].querySelectorAll("button").forEach((btn=>{btn.setAttribute("disabled",!1)}))}close(){this.settings?.onClose&&"function"==typeof this.settings?.onClose&&this.settings.onClose(),this.popupEl.remove()}#EventListener(){this.settings.overlayer||document.addEventListener("click",this.OutsideClick)}#outsideClickListener(e){e.target.closest(".modal_ctn")||e.target==this.elem||this.close()}}class AlertPopup{constructor(options){this.settings={title:"Alert",buttons:[{title:"Cancel",click:modal=>{modal.close()}}],content:null,customClass:null,outsideClose:!1,onClose:null,onOpen:null,width:150,height:100,autoOpen:!0,overlayer:!1,position:"center",autoClose:!1,timer:1e3,...options},this.popupEl=null,this.#build(),this.open()}#build(){this.CtnDiv=createDOMElement({attributes:{class:"alert_ctn"}});const InnerCtnDiv=createDOMElement({attributes:{class:"alert_innerctn"}});""!=this.settings.title&&InnerCtnDiv.appendChild(createDOMElement({attributes:{class:"alert_headerctn"},text:this.settings.title}));const ContentDiv=createDOMElement({attributes:{class:"content_ctn"}}),BtnDiv=createDOMElement({attributes:{class:"btn_ctn"}});null!=this.settings.customClass&&this.CtnDiv.classList.add(this.settings.customClass),this.CtnDiv.appendChild(InnerCtnDiv),InnerCtnDiv.appendChild(ContentDiv),InnerCtnDiv.appendChild(BtnDiv)}#loadContent(fallback){if(this?.popupEl){var contentCtn=this.popupEl.getElementsByClassName("content_ctn");switch(typeof this.settings.content){case"string":contentCtn[0].innerHTML=this.settings.content;break;case"object":contentCtn[0].appendChild(this.settings.content);break}this.#loadButtons(),"function"==typeof fallback&&fallback()}}#loadButtons(){var btnCtn=this.popupEl.getElementsByClassName("btn_ctn");this.settings?.buttons&&"object"==typeof this.settings?.buttons&&this.settings.buttons.length>0&&this.settings.buttons.forEach((btn=>{var button=createDOMElement({type:"button",attributes:{class:"modal_ctn"},text:btn?.title});btn?.tooltip&&button.setAttribute("title",btn.tooltip),btn?.form&&button.setAttribute("form",btn.form),btn?.customClass&&button.classList.add(btn.customClass),btnCtn[0].appendChild(button),btn?.click&&button.addEventListener("click",(evt=>{btn.click(this,evt)}))}))}open(){const body=document.getElementsByTagName("body");this.settings.overlayer?(this.OverDiv=createDOMElement({attributes:{class:"alert_overlay",onclick:this.settings?.outsideClose&&this.settings.overlayer?this.OutsideClick:()=>{}}}),this.OverDiv.appendChild(this.CtnDiv),this.popupEl=this.OverDiv):this.popupEl=this.CtnDiv,body[0].appendChild(this.popupEl),this.popupEl.style.zIndex=10+document.querySelectorAll(".modal_ctn, .alert_ctn").length,this.#loadContent((()=>{"function"==typeof this.settings.onOpen&&this.settings.onOpen(this)})),this.settings.autoClose&&setTimeout((()=>{this.close()}),this.settings.timer)}close(){this.settings?.onClose&&"function"==typeof this.settings?.onClose&&this.settings.onClose(),this.popupEl.remove()}}class MediaSelectorItem{#elmP;#elm;#data={};#callback;constructor({elmP:elmP,data:data},callback=(()=>{})){this.#elmP=elmP,this.#data={...this.#data,...data},this.callback=callback,this.#init()}#init(){this.#elm=createDOMElement({attributes:this.#data}),this.#elm.appendChild(createDOMElement({type:"img",attributes:{src:this.#data.path}})),this.#elm.appendChild(createDOMElement({type:"span",text:this.#data.name})),this.#elmP.appendChild(this.#elm),this.#eventListener()}#eventListener(){this.#elm.addEventListener("click",(()=>{this.callback(this.#data)}))}}class MediaSelector{#medias=[];#mediasArr=[];#popElm;#elmP;#mainBody;#multselect=[];#settings={onSelect:()=>{},onBeforeOpen:()=>{},onOpen:()=>{},multiSelect:!1,selectedItems:null,maxItems:20,hideUpload:!0,showExt:["jpg","jpeg","png","gif","webp"]};#callback;constructor({elm:elm,options:options},callback=(()=>{})){this.#elmP=elm,this.#settings={...this.#settings,...options},this.#callback=callback,this.#init()}#init(){this.#elmP.addEventListener("click",this.#clickedOnThis.bind(this))}#getMedia(){var _=this;fetch("/modules/mediamanager/getmedias").then((response=>response.json())).then((response=>{_.#medias=response,_.#appendMedia()}))}#appendMedia(){this.#medias.forEach((obj=>{this.#mediasArr.push(new MediaSelectorItem({elmP:this.#mainBody,data:obj},(data=>{this.#settings.multiSelect?this.#multselect.push(data):(this.#callback(data),this.#popElm.close())})))}))}#clickedOnThis(evt){var _=this;"function"==typeof _.#settings.onBeforeOpen&&_.#settings.onBeforeOpen(_.#elmP,_.#settings),this.#popElm=new Modal({title:"",content:'<div class="mediaSelector">   <div class="mediaHeader">     <label class="gt-label">       Search&nbsp;&nbsp;<input class="gt-input" name="search_media" id="search_media" type="search" placeholder="Type here to search...">     </label>   </div>   <div class="mediaMainbody gridView">     </div></div>',onOpen:modal=>{var popupEl=modal.popupEl;_.#mainBody=popupEl.querySelector(".mediaMainbody"),setTimeout((function(){"function"==typeof _.#settings.onBeforeOpen&&_.#settings.onBeforeOpen(_.#elmP,_.#settings)}),1e3),_.#getMedia()},buttons:[{title:"Cancel",click:function(modal){modal.close()}}]},(data=>{}))}}function createDOMElement({type:type="div",attributes:attributes=null,text:text=null}={type:"div"}){const element=document.createElement(type);return text&&(element.innerText=text),attributes&&Object.entries(attributes).forEach((([key,value])=>{0===key.indexOf("on")?element.addEventListener(key.substring(2),value):element.setAttribute(key,value)})),element}function checkZeroValue(value){var num=Number(value);num=num<0?0:num}function objectToFormData(obj,formData=new FormData,parentKey=""){for(const key in obj){if(!obj.hasOwnProperty(key))continue;const value=obj[key],formKey=parentKey?`${parentKey}[${key}]`:key;value instanceof Date?formData.append(formKey,value.toISOString()):value instanceof File||value instanceof Blob?formData.append(formKey,value):"object"==typeof value&&null!==value?objectToFormData(value,formData,formKey):formData.append(formKey,value)}return formData}async function fetchWithProgress(url,options,onProgress){const response=await fetch(url,options);if(!response.ok)throw new Error(`HTTP error! status: ${response.status}`);const contentLength=response.headers.get("Content-Length");contentLength||console.warn("No Content-Length header, cannot show accurate progress");const reader=response.body.getReader(),total=contentLength?parseInt(contentLength,10):0;let received=0,chunks=[];for(;;){const{done:done,value:value}=await reader.read();if(done)break;if(chunks.push(value),received+=value.length,total){onProgress(Math.round(received/total*100))}else{onProgress(Math.min(90,Math.round(received/1e3)))}}const fullBody=new Uint8Array(received);let position=0;for(let chunk of chunks)fullBody.set(chunk,position),position+=chunk.length;return(new TextDecoder).decode(fullBody)}