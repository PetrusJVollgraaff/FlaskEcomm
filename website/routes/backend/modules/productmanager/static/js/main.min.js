class ProductEditor{#productData={id:0,name:"",instock:0,image:{imgid:0,usedid:0,path:""},code:"",showonline:!1,onspecial:!1,normalprice:{id:0,price:0},specialprice:null};#productID=0;#formELm;#modal;#formValid=!0;#checkValidArr=[{order:1,name:"product_name",title:"Product Name"},{order:2,name:"product_code",title:"Product Code"},{order:3,name:"product_stock",title:"Product Stock"},{order:1,name:"price_normal",title:"Price"},{order:2,name:"price_special",title:"Special Price"}];#ajaxUrl="";#action;#callback=()=>{};constructor({action:action="create",id:id},callback){this.#action=action,this.#callback=callback,this.#productID=id,this.#ajaxUrl="/modules/productmanager/productfield"+(this.#productID>0?"/"+this.#productID:""),this.#init(),console.log(this)}#init(){var _=this;this.#modal=new Modal({title:"edit"==this.#action?"Edit Product":"Create Product",ajaxUrl:this.#ajaxUrl,onOpen:modal=>{var popupEl=modal.popupEl;_.#formELm=popupEl.querySelector("form"),_.#eventListener()},buttons:[{title:this.#action="Edit",form:"product_form_editor"},{title:"Cancel",click:function(modal){console.log("123"),modal.close()}}]},(data=>{"error"==data.status&&new AlertPopup({title:"Warning",overlayer:!0,content:data.message})}))}#CheckFieldValid(){this.#formValid=!0;for(let field of this.#formELm.elements){var objData=this.#checkValidArr.find((obj=>obj.name==field.name));if(field.willValidate&&!field.checkValidity()){this.#formValid=!1,field.focus(),new AlertPopup({title:"Warning",overlayer:!0,content:field.validity.valueMissing?`${objData.title} is required.`:field.validity.typeMismatch?`Please enter a valid ${objData.title.toLowerCase()}.`:""});break}}}#eventListener(){var _=this;this.#formELm.addEventListener("submit",(evt=>{if(evt.preventDefault(),_.#CheckFieldValid(),_.#formValid){_.#modal.disablebtn();var formData=new FormData(_.#formELm);this.#productID>0&&formData.append("product_id",this.#productID),fetch(this.#ajaxUrl,{method:this.#productID>0?"PUT":"POST",body:new URLSearchParams(formData).toString(),headers:{"Content-Type":"application/x-www-form-urlencoded "}}).then((response=>{if(response.ok)return response.json();const data=response.json(),error=new Error(`Response status: ${response.status}`);throw error.data=data,error})).then((response=>console.log(response))).catch((err=>{console.error(err.message)}))}return!1}))}}class Product{#ElmP;#Elm;#Data={};#BtnDelete;#BtnEdit;#callback=()=>{};constructor({elmP:elmP,obj:obj},callback=(()=>{})){this.#ElmP=elmP,this.#Data={...obj},this.#callback=callback,this.#init()}#init(){this.#buildElm(),this.#ElmP.appendChild(this.#Elm),this.#eventListener()}#buildElm(){this.#Elm=createDOMElement({attributes:{"data-id":this.#Data.id,class:"product_block"}}),this.#Elm.appendChild(createDOMElement({type:"img",attributes:{src:this.#Data.image.path}})),this.#Elm.appendChild(createDOMElement({type:"p",text:this.#Data.name})),this.#BtnEdit=createDOMElement({type:"button",attributes:{class:"btn_edit"},text:"Edit"}),this.#BtnDelete=createDOMElement({type:"button",attributes:{class:"btn_delete"},text:"X"}),this.#Elm.appendChild(this.#BtnEdit),this.#Elm.appendChild(this.#BtnDelete)}#eventListener(){this.#BtnDelete.addEventListener("click",(evt=>{this.#callback({action:"delete",id:this.#Data.id})})),this.#BtnEdit.addEventListener("click",(evt=>{this.#callback({action:"edit",id:this.#Data.id})}))}}class ProductManager{#Products=[];#btnAddmedia=document.getElementById("btn_addproduct");#Elm=document.getElementById("product_ctn");constructor(){this.#init()}#init(){this.#eventListener(),this.#getProduct()}#getProduct(){fetch("/modules/productmanager/getproducts").then((response=>response.json())).then((response=>this.#build(response)))}#build(data){data.forEach((obj=>{this.#Products.push(new Product({elmP:this.#Elm,obj:obj},(data=>{"delete"==data.action&&this.#removeProduct(data.id),"edit"==data.action&&this.#modalProduct({action:"edit",id:data.id})})))}))}#removeProduct(id){fetch("/modules/productmanager/removeproduct",{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:id})}).then((response=>response.json())).then((response=>console.log(response)))}#modalProduct({action:action,id:id=0}){new ProductEditor({action:action,id:id},(data=>{}))}#eventListener(){this.#btnAddmedia.addEventListener("click",(()=>{this.#modalProduct({action:"create"})}))}}document.addEventListener("DOMContentLoaded",(evt=>{new ProductManager}));